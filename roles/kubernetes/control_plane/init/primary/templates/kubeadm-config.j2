# SPDX-License-Identifier: Apache-2.0
# -----------------------------------------------------------
# kubeadm Cluster Configuration Template (SAS Custom)
# -----------------------------------------------------------

# ClusterConfiguration
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
kubernetesVersion: "{{ kubernetes_version }}"
clusterName: "{{ kubernetes_cluster_name | default('kubernetes') }}"
controlPlaneEndpoint: "{{ kubernetes_control_plane_endpoint | default(ansible_host ~ ':6443', true) }}"
networking:
  podSubnet: "{{ kubernetes_pod_subnet }}"
  serviceSubnet: "{{ kubernetes_service_subnet | default('10.96.0.0/12') }}"
  dnsDomain: "{{ kubernetes_dns_domain | default('cluster.local') }}"

apiServer:
  extraArgs:
    - name: "authorization-mode"
      value: "Node,RBAC"
    - name: "enable-admission-plugins"
      value: "NodeRestriction"
  certSANs:
    - "{{ kubernetes_control_plane_endpoint | default(ansible_host, true) }}"
    - "127.0.0.1"

controllerManager:
  extraArgs:
    - name: "allocate-node-cidrs"
      value: "true"
    - name: "cluster-cidr"
      value: "{{ kubernetes_pod_subnet }}"

scheduler: {}

---

# InitConfiguration
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ ansible_host }}"
  bindPort: 6443
nodeRegistration:
  name: "{{ inventory_hostname }}"
  criSocket: "unix:///var/run/containerd/containerd.sock"
  kubeletExtraArgs:
    - name: "cgroup-driver"
      value: "systemd"

---

# KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  anonymous:
    enabled: false
cgroupDriver: systemd
clusterDNS:
  - "{{ kubernetes_cluster_dns }}"
clusterDomain: "{{ kubernetes_dns_domain | default('cluster.local') }}"
failSwapOn: true
maxPods: 110
readOnlyPort: 0

---

# KubeProxyConfiguration
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "ipvs"
ipvs:
  strictARP: true
metricsBindAddress: "0.0.0.0:10249"
enableProfiling: true
clusterCIDR: "{{ kubernetes_pod_subnet }}"
